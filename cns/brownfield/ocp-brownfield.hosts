[masters]
ose-master[01:03].example.com

[etcd]
ose-master[01:03].example.com

[nodes]
ose-master[01:03].example.com openshift_node_labels="{'region': 'primary', 'zone': 'default', 'role': 'master'}"
ose-infra-node[01:03].example.com openshift_node_labels="{'region': 'infra', 'zone': 'default', 'role': 'infra'}"
ose-app-node[01:03].example.com openshift_node_labels="{'region': 'primary', 'zone': 'default', 'role': 'app'}"


[OSEv3:children]
masters
nodes
etcd

[OSEv3:vars]
ansible_user=root
#ansible_become=yes
openshift_disable_check=disk_availability

openshift_deployment_type=openshift-enterprise
openshift_release=v3.9

#osm_default_subdomain=apps.ose-master.example.com
openshift_master_default_subdomain=apps.ose-master.example.com

# Debug level for all OpenShift components (Defaults to 2)
debug_level=2

# Manage openshift example imagestreams and templates during install and upgrade
openshift_install_examples=true
docker_version="1.13.1"


# htpasswd auth
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]

# Defining htpasswd users
openshift_master_htpasswd_users={'user1': '$1$xyz$I1.Xb6qvLmzMqzXpNuDcE1', 'user2': '$1$xyz$I1.Xb6qvLmzMqzXpNuDcE1'}

# Allow all auth
openshift_master_identity_providers=[{'name': 'allow_all', 'login': 'true', 'challenge': 'true', 'kind': 'AllowAllPasswordIdentityProvider'}]

# Enable cockpit
osm_use_cockpit=true


# Docker Configuration
# Add additional, insecure, and blocked registries to global docker configuration
# For enterprise deployment types we ensure that registry.access.redhat.com is
# included if you do not include it
#openshift_docker_additional_registries=registry.example.com
#openshift_docker_insecure_registries=registry.example.com
#openshift_docker_blocked_registries=docker.io

# Items added, as is, to end of /etc/sysconfig/docker OPTIONS
# Default value: "--log-driver=journald"
#openshift_docker_options="-l warn --ipv6=false"

# Configure LDAP CA certificate
# Specify either the ASCII contents of the certificate or the path to
# the local file that will be copied to the remote host. CA
# certificate contents will be copied to master systems and saved
# within /etc/origin/master/ with a filename matching the "ca" key set
# within the LDAPPasswordIdentityProvider.
#
#openshift_master_ldap_ca=<ca text>
# or
#openshift_master_ldap_ca_file=<path to local ca file to use>

#
# Set cockpit plugins
osm_cockpit_plugins=['cockpit-kubernetes']

# Override master and node servingInfo.minTLSVersion and .cipherSuites
# valid TLS versions are VersionTLS10, VersionTLS11, VersionTLS12
# example cipher suites override, valid cipher suites are https://golang.org/pkg/crypto/tls/#pkg-constants
openshift_master_min_tls_version=VersionTLS12
#openshift_master_cipher_suites=['TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256', '...']
#
openshift_node_min_tls_version=VersionTLS12
#openshift_node_cipher_suites=['TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256', '...']

# OpenShift Router Options
#

# Router certificate (optional)
# Provide local certificate paths which will be configured as the
# router's default certificate.

#openshift_hosted_router_certificate={"certfile": "/path/to/router.crt", "keyfile": "/path/to/router.key", "cafile": "/path/to/router-ca.crt"}

# Openshift Registry Options
#
#openshift_hosted_registry_replicas=1

openshift_hosted_registry_replicas=1
openshift_registry_selector="role=infra" 
#openshift_hosted_registry_storage_kind=glusterfs 
#openshift_hosted_registry_storage_volume_size=25Gi

# Metrics deployment
openshift_metrics_install_metrics=true

# Logging deployment
openshift_logging_install_logging=true
openshift_logging_es_cluster_size=3

# Prometheus deployment
#
openshift_hosted_prometheus_deploy=true

# Configure the multi-tenant SDN plugin (default is 'redhat/openshift-ovs-subnet')
os_sdn_network_plugin_name='redhat/openshift-ovs-multitenant'

# Configure SDN cluster network and kubernetes service CIDR blocks. These
# network blocks should be private and should not conflict with network blocks
# in your infrastructure that pods may require access to. Can not be changed
# after deployment.
#
# WARNING : Do not pick subnets that overlap with the default Docker bridge subnet of
# 172.17.0.0/16. Your installation will fail and/or your configuration change will
# cause the Pod SDN or Cluster SDN to fail.
#
# WORKAROUND : If you must use an overlapping subnet, you can configure a non conflicting
# docker0 CIDR range by adding '--bip=192.168.2.1/24' to DOCKER_NETWORK_OPTIONS
# environment variable located in /etc/sysconfig/docker-network.
# When upgrading or scaling up the following must match whats in your master config!
# Inventory: master yaml field
# osm_cluster_network_cidr: clusterNetworkCIDR
# openshift_portal_net: serviceNetworkCIDR
# When installing osm_cluster_network_cidr and openshift_portal_net must be set.
# Sane examples are provided below.
#osm_cluster_network_cidr=10.128.0.0/14
#openshift_portal_net=172.30.0.0/16

# ExternalIPNetworkCIDRs controls what values are acceptable for the
# service external IP field. If empty, no externalIP may be set. It
# may contain a list of CIDRs which are checked for access. If a CIDR
# is prefixed with !, IPs in that CIDR will be rejected. Rejections
# will be applied first, then the IP checked against one of the
# allowed CIDRs. You should ensure this range does not overlap with
# your nodes, pods, or service CIDRs for security reasons.
#openshift_master_external_ip_network_cidrs=['0.0.0.0/0']

# IngressIPNetworkCIDR controls the range to assign ingress IPs from for
# services of type LoadBalancer on bare metal. If empty, ingress IPs will not
# be assigned. It may contain a single CIDR that will be allocated from. For
# security reasons, you should ensure that this range does not overlap with
# the CIDRs reserved for external IPs, nodes, pods, or services.
#openshift_master_ingress_ip_network_cidr=172.46.0.0/16

# Configure number of bits to allocate to each host's subnet e.g. 9
# would mean a /23 network on the host.
# When upgrading or scaling up the following must match whats in your master config!
# Inventory: master yaml field
# osm_host_subnet_length: hostSubnetLength
# When installing osm_host_subnet_length must be set. A sane example is provided below.
#osm_host_subnet_length=9

# the provided value, specify openshift_master_overwrite_named_certificates.
openshift_master_overwrite_named_certificates=true

# Detected names may be overridden by specifying the "names" key
#openshift_master_named_certificates=[{"certfile": "/path/to/custom1.crt", "keyfile": "/path/to/custom1.key", "names": ["{{ openshift_master_cluster_public_hostname }}"], "cafile": "/path/to/custom-ca1.crt"}]

# Configure logrotate scripts
# See: https://github.com/nickhammond/ansible-logrotate
logrotate_scripts=[{"name": "syslog", "path": "/var/log/cron\n/var/log/maillog\n/var/log/messages\n/var/log/secure\n/var/log/spooler\n", "options": ["daily", "rotate 7", "compress", "sharedscripts", "missingok"], "scripts": {"postrotate": "/bin/kill -HUP `cat /var/run/syslogd.pid 2> /dev/null` 2> /dev/null || true"}}]

# Enable service catalog
openshift_enable_service_catalog=true

# Enable template service broker (requires service catalog to be enabled, above)
template_service_broker_install=true

# Configure usage of openshift_clock role.
openshift_clock_enabled=true

# Enable API service auditing
openshift_master_audit_config={"enabled": true}
#
# In case you want more advanced setup for the auditlog you can
# use this line.
# The directory in "auditFilePath" will be created if it's not
# exist
#openshift_master_audit_config={"enabled": true, "auditFilePath": "/var/log/openpaas-oscp-audit/openpaas-oscp-audit.log", "maximumFileRetentionDays": 14, "maximumFileSizeMegabytes": 500, "maximumRetainedFiles": 5}

